HTML = Hyper Text Markup Lang
To build website

Tags and Elements

HTML makerup syntax

<h1 = tag name
</h1> = End tag

class = "dnkjsndk" = attribute, allow to customize tag. assign value
 all of it tother is a node

 Tags-- 

 <head> represent in the head section, for meta data
 <body> Body of html doc
 <header> contains layout about the body 
 <artical> new for html5, contains clock entries, post
 <p> paragraphns in an artical
 <h1> :Heading which is headline or title of a page

common in webscraper
<div> a divider or natural container
<nav> to spesifcy a speific region (page 1,2,3,4,5....)
<li> list it, order list
<a> Anchor, hyperlink to make link (Think Href) <a class="visually-hidden" href="#main-content">Skip to Main Content</a>

<button> a button that can be click, commonly use in form
<table> used for making tables in html page
<td> "Table Data" represent a cell in a table
<tr> "Table row element" a row of cells in a table
<ul> unordered list, 
<iframe> make is possible to embbed a page in a page "nested browsing" Makes webscraping tricking, sometime you have to switch from one frame to another 

_____Tree structure for webscraping________

Root Element = <artical>
    artical (attribute/ Class= "main-artica" )
    Element <h1> (text "titanic 1997"): which is the title
    Element <p> (attribute class= "plot"), (Text = "84 years later"): which is the decription
    Element <div> (attribute class= "full script"), (Text = "13 meters): which is the transcript

attribute/ text node cannot have children. Parent nodes can have several child nodes

_______Xpath - Syntax_________
xpath stands for XML path Lang, it is a query lang for selecting node from a xml doc. But we can use it to select html pages or css selectors

xpath syntax 
A way to select an element use "//(tagname)" can be used to find all of that element. ie Picking a matching node with x tagname 
//tagname
We can also get the element by its position by using the square brackets [] and putting the position number within the brackects 
//tagname[3] 
We can also speific an element with a speific attribute
//tagname[@attributeName="Value"]

Can use functions for find elements 
contain() = find text that contains value inside the parathensesis 
example: //tagname[contains(@attributeName, "Value")]
starts-with()

Can also use and/or operators with xpath expression
example: //tagname[(expression1) and (expression2)]

